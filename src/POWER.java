/*
48page4.3
给定正整数数组A=[93,23,8,46,26,43,6,97]
分别使用插入排序，快速排序，合并排序对该数组进行排序。
请图示各个算法执行的详细过程。
*/
/*
插入排序
初始状态：已排序部分为[93]，未排序部分为[23,8,46,26,43,6,97]
第1轮（插入23）：
比较23和93，23<93，所以插入到93前面。
数组变为：[23,93,8,46,26,43,6,97]
第2轮（插入8）：
已排序部分[23,93]，插入8。8比23小，插入到最前面。
数组变为：[8,23,93,46,26,43,6,97]
第3轮（插入46）：
已排序部分[8,23,93]，插入46。46比23大，但比93小，插入到23和93之间。
数组变为：[8,23,46,93,26,43,6,97]
第4轮（插入26）：
已排序部分[8,23,46,93]，插入26。26比23大，但比46小，插入到23和46之间。
数组变为：[8,23,26,46,93,43,6,97]
第5轮（插入43）：
已排序部分[8,23,26,46,93]，插入43。43在26和46之间。
数组变为：[8,23,26,43,46,93,6,97]
第6轮（插入6）：
已排序部分[8,23,26,43,46,93]，插入6。6比所有元素都小，插入到最前面。
数组变为：[6,8,23,26,43,46,93,97]
第7轮（插入97）：
已排序部分[6,8,23,26,43,46,93]，插入97。97比93大，插入到最后。
数组变为：[6,8,23,26,43,46,93,97]
 */
/*
快速排序
初始数组: [93, 23, 8, 46, 26, 43, 6, 97]
第一层分区（基准93）:
小于93的放在左边 → [6, 23, 8, 46, 26, 43, 93, 97]
递归处理左子数组 [6, 23, 8, 46, 26, 43] 和右子数组 [97]。
处理左子数组 [6, 23, 8, 46, 26, 43]（基准6）:
所有元素 > 6 → 分区后不变，递归处理右子数组 [23, 8, 46, 26, 43]。
处理右子数组 [23, 8, 46, 26, 43]（基准23）:
分区后 → [8, 23, 46, 26, 43]
递归处理左子数组 [8] 和右子数组 [46, 26, 43]。
处理右子数组 [46, 26, 43]（基准46）:
分区后 → [26, 43, 46]
递归处理左子数组 [26, 43]（排序后为 [26, 43]）。
合并结果:
左半部分：[6] + 排序后的 [8, 23, 26, 43, 46]
右半部分：[93, 97]
最终数组: [6, 8, 23, 26, 43, 46, 93, 97]
 */
/*
归并排序
分割阶段:
初始数组 → 左[93,23,8,46] 右[26,43,6,97]
左分割 → [93,23] 和 [8,46]；右分割 → [26,43] 和 [6,97]
继续分割到单个元素。
合并阶段:
合并 [93] 和 [23] → [23, 93]
合并 [8] 和 [46] → [8, 46]
合并 [23,93] 和 [8,46] → [8, 23, 46, 93]
合并 [26] 和 [43] → [26, 43]
合并 [6] 和 [97] → [6, 97]
合并 [26,43] 和 [6,97] → [6, 26, 43, 97]
最终合并 [8,23,46,93] 和 [6,26,43,97] → [6, 8, 23, 26, 43, 46, 93, 97]
最终结果: [6, 8, 23, 26, 43, 46, 93, 97]
 */
